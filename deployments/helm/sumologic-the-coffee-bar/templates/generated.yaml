apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  labels:
    team: paas
  name: localpvcontrollers.storage.local.sumologic.com
spec:
  group: storage.local.sumologic.com
  names:
    kind: LocalPVController
    listKind: LocalPVControllerList
    plural: localpvcontrollers
    singular: localpvcontroller
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: LocalPVController is the Schema for the localpvcontrollers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LocalPVControllerSpec defines the desired state of LocalPVController
            properties:
              foo:
                description: Foo is an example field of LocalPVController. Edit localpvcontroller_types.go to remove/update
                type: string
            type: object
          status:
            description: LocalPVControllerStatus defines the observed state of LocalPVController
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    team: paas
  name: '{{ .Release.Name }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    team: paas
  name: '{{ .Release.Name }}-leader-election-role'
  namespace: '{{ .Release.Namespace }}'
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    team: paas
  name: '{{ .Release.Name }}-manager-role'
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.local.sumologic.com
  resources:
  - localpvcontrollers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.local.sumologic.com
  resources:
  - localpvcontrollers/finalizers
  verbs:
  - update
- apiGroups:
  - storage.local.sumologic.com
  resources:
  - localpvcontrollers/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    team: paas
  name: '{{ .Release.Name }}-leader-election-rolebinding'
  namespace: '{{ .Release.Namespace }}'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: '{{ .Release.Name }}-leader-election-role'
subjects:
- kind: ServiceAccount
  name: '{{ .Release.Name }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    team: paas
  name: '{{ .Release.Name }}-manager-rolebinding'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ .Release.Name }}-manager-role'
subjects:
- kind: ServiceAccount
  name: '{{ .Release.Name }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
