# Default values for sumologic.thecoffeebar.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

## Specifies number of pod replicas running at any given time
replicaCount:
  frontend:
    replicas: 1
  calculatorsvc:
    replicas: 1
  clicker:
    replicas: 1
  postgres:
    replicas: 1
  cashdesk:
    replicas: 1
  bar:
    replicas: 1
  coffeesvc:
    replicas: 1
  coffeemachine:
    replicas: 1
  machinesvc:
    replicas: 1
  watersvc:
    replicas: 1

image:
  dotnet:
    repository: public.ecr.aws/sumologic/the-coffee-bar
    tag: calculator-dotnet-1.4.0-beta.3-1.0.0-rc9.9
  frontend:
    repository: public.ecr.aws/sumologic/the-coffee-bar
    tag: frontend-v0.1.4
  python:
    repository: public.ecr.aws/sumologic/the-coffee-bar
    tag: pythonAppsv0.3.1-ot1.17.0-0.38b0
  ruby:
    repository: public.ecr.aws/sumologic/the-coffee-bar
    tag: rubyAppsv0.2.1-ot1.2.0-0.35.0-0.24.0
  clicker:
    repository: public.ecr.aws/sumologic/the-coffee-bar
    tag: clicker-v1.2
  postgres:
    repository: postgres
    tag: 9.6.2-alpine

  pullPolicy: Always

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## Create a load balancer for bar service and frontend servic
loadBalancers:
  bar:
    enabled: true
  frontend:
    enabled: true

## Custom labels to apply to service, deployment and pods
customLabels:
  frontend:
    labels: {}
  calculatorsvc:
    labels: {}
  clicker:
    labels: {}
  postgres:
    labels: {}
    metadataLabels: {}
  cashdesk:
    labels: {}
  bar:
    labels: {}
  coffeesvc: 
    labels: {}
  coffeemachine:
    labels: {}
  machinesvc:
    labels: {}
  watersvc:
    labels: {}

## Custom pod annotations to apply to deployment
podAnnotations:
  frontend:
    podAnnotations: {}
  calculatorsvc:
    podAnnotations: {}
  clicker:
    podAnnotations: {}
  postgres:
    podAnnotations: {}
  cashdesk:
    podAnnotations: {}
  bar:
    podAnnotations: {}
  coffeesvc:
    podAnnotations: {}
  coffeemachine:
    podAnnotations: {}
  machinesvc:
    podAnnotations: {}
  watersvc:
    podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  ## Required to run browsers in headless mode
  clicker:
    capabilities:
      add:
        - SYS_ADMIN
  ## Required to run CPU Killer/Network Delay
  frontend:
    capabilities:
      add:
        - SYS_ADMIN
        - NET_ADMIN
  ## Required to run CPU Killer/Network Delay
  coffeemachine:
    capabilities:
      add:
        - SYS_ADMIN
        - NET_ADMIN
  common: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  frontend:
    requests:
      cpu: 300m
      memory: 512Mi
    limits:
      cpu: 800m
      memory: 768Mi
  calculatorsvc:
    common:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        cpu: 150m
        memory: 250Mi
  clicker:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1024Mi
  postgres:
    requests:
      cpu: 200m
      memory: 250Mi
    limits:
      cpu: 500m
      memory: 500Mi
  cashdesk:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 200m
      memory: 200Mi
  bar:
    requests:
      cpu: 50m
      memory: 50Mi
    limits:
      cpu: 200m
      memory: 200Mi
  coffeesvc:
    requests:
      cpu: 50m
      memory: 50Mi
    limits:
      cpu: 150m
      memory: 150Mi
  coffeemachine:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 250m
      memory: 300Mi
  machinesvc:
    requests:
      cpu: 50m
      memory: 50Mi
    limits:
      cpu: 150m
      memory: 150Mi
  watersvc:
    requests:
      cpu: 50m
      memory: 60Mi
    limits:
      cpu: 150m
      memory: 200Mi

healthChecks:
  calculator:
    livenessProbe:
      enabled: true
      exec:
        command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep dotnet | grep -v grep
      periodSeconds: 5
      initialDelaySeconds: 15
    readinessProbe:
      enabled: true
      exec:
        command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep dotnet | grep -v grep
      periodSeconds: 5
      initialDelaySeconds: 15
  clicker:
    livenessProbe:
      enabled: true
      exec:
        command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep node | grep -v grep
      periodSeconds: 5
      initialDelaySeconds: 15
    readinessProbe:
      enabled: true
      exec:
        command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep node | grep -v grep
      periodSeconds: 5
      initialDelaySeconds: 15
  frontend:
    livenessProbe:
      enabled: true
      exec:
        command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep npm | grep -v grep
      periodSeconds: 5
      initialDelaySeconds: 15
    readinessProbe:
        enabled: true
        exec:
          command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep npm | grep -v grep
        periodSeconds: 5
        initialDelaySeconds: 15
  pythonApps:
    livenessProbe:
      enabled: true
      exec:
        command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep python | grep -v grep
      periodSeconds: 5
      initialDelaySeconds: 15
    readinessProbe:
      enabled: true
      exec:
        command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep python | grep -v grep
      periodSeconds: 5
      initialDelaySeconds: 15
  rubyApps:
    livenessProbe:
      enabled: true
      exec:
        command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep ruby | grep -v grep
      periodSeconds: 5
      initialDelaySeconds: 15
    readinessProbe:
      enabled: true
      exec:
        command:
          - /bin/sh
          - -c
          - -e
          - |
            ps aux | grep ruby | grep -v grep
      periodSeconds: 5
      initialDelaySeconds: 15

nodeSelector: {}

tolerations: []

## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## By default we don't set affinity:
affinityRule:
  frontend:
    affinity: {}
  calculatorsvc:
    affinity: {}
  clicker:
    affinity: {}
  postgres:
    affinity: {}
  cashdesk:
    affinity: {}
  bar:
    affinity: {}
  coffeesvc:
    affinity: {}
  coffeemachine:
    affinity: {}
  machinesvc:
    affinity: {}
  watersvc:
    affinity: {}

## ref: https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/#marking-pod-as-critical
## By default we don't set pod priority:
podPriority:
  frontend:
    enabled: false
    priorityClassName:
  calculatorsvc:
    enabled: false
    priorityClassName:
  clicker:
    enabled: false
    priorityClassName:
  postgres:
    enabled: false
    priorityClassName:
  cashdesk:
    enabled: false
    priorityClassName:
  bar:
    enabled: false
    priorityClassName:
  coffeesvc:
    enabled: false
    priorityClassName:
  coffeemachine:
    enabled: false
    priorityClassName:
  machinesvc:
    enabled: false
    priorityClassName:
  watersvc:
    enabled: false
    priorityClassName:

## added deployment.environment=default in OTEL_RESOURCE_ATTRIBUTES for all services
## added REACT_APP_ENVIRONMENT_NAME: "default" & OTEL_TRACES_EXPORTER: "otlp_proto_http" in frontend service
envs:
  bar:
    OTEL_RESOURCE_ATTRIBUTES: "application=the-coffee-bar-app,deployment.environment=default"
    OTEL_SERVICE_NAME: "the-coffee-bar"
    OTEL_PROPAGATORS: "b3,tracecontext,baggage"
    OTEL_METRICS_EXPORTER: "none"
  calculatorsvc:
    OTEL_RESOURCE_ATTRIBUTES: "application=the-coffee-bar-app,deployment.environment=default"
    OTEL_SERVICE_NAME: "calculator-svc"
    OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf"
  cashdesk:
    OTEL_RESOURCE_ATTRIBUTES: "application=the-coffee-bar-app,deployment.environment=default"
    OTEL_SERVICE_NAME: "the-cashdesk"
    OTEL_PROPAGATORS: "b3,tracecontext,baggage"
    OTEL_METRICS_EXPORTER: "none"
  clicker:
    DELAY: "5"
  coffeemachine:
    INTERVAL_BASED_TRIGGER: "false"  # cron trigger or interval based trigger, if interval based provide SPIKE_INTERVAL_DAYS and SPIKE_INTERVAL_HOURS. CRON not considered for interval based trigger.
    SPIKE_INTERVAL_DAYS: "0"  # default 0 How many day to skip before next trigger. It will combine with SPIKE_INTERVAL_HOURS to determine next trigger time.
    SPIKE_INTERVAL_HOURS: "1"  # default 1 How many hours to skip before next trigger. It will combine with SPIKE_INTERVAL_DAYS to determine next trigger time. Example: To schedule after every 5 days and every 6 hours set SPIKE_INTERVAL_HOURS as 6 and SPIKE_INTERVAL_DAYS as 5
    SPIKE_CRON: "0 * * * *"
    SPIKE_START_DATE: null  #  ISO 8601 format example: 2014-05-30 00:00:00
    SPIKE_DURATION: "300"  # in seconds, Use 3600 for 1 hour
    CPU_SPIKE_PROCESSES: "1"
    NETWORK_DELAY: "1sec"
    OTEL_RESOURCE_ATTRIBUTES: "application=the-coffee-bar-app,deployment.environment=default"
    OTEL_PROPAGATORS: "b3,tracecontext,baggage"
    OTEL_SERVICE_NAME: "the-coffee-machine"
    OTEL_METRICS_EXPORTER: "none"
  coffeesvc:
    OTEL_RESOURCE_ATTRIBUTES: "application=the-coffee-bar-app,deployment.environment=default"
    OTEL_PROPAGATORS: "b3,tracecontext,baggage"
    OTEL_SERVICE_NAME: "coffee-svc"
  frontend:
    REACT_APP_RUM_SCRIPT_URL: "https://rum.sumologic.com/sumologic-rum.js"
    REACT_APP_SERVICE_NAME: "the-coffee-bar-frontend"
    REACT_APP_APPLICATION_NAME: "the-coffee-bar-app"
    REACT_APP_DEFAULT_ATTRIBUTES: '{"peer.service":"the-coffee-bar"}'
    REACT_APP_DROP_SINGLE_TRACES: 'false'
    REACT_APP_ENVIRONMENT_NAME: "default"
    ## Envs to configure CPU Killer and Network Delay
    INTERVAL_BASED_TRIGGER: "false"  # cron trigger or interval based trigger, if interval based provide SPIKE_INTERVAL_DAYS and SPIKE_INTERVAL_HOURS. CRON not considered for interval based trigger.
    SPIKE_INTERVAL_DAYS: "0"  # default 0
    SPIKE_INTERVAL_HOURS: "1"  # default 1
    SPIKE_CRON: "0 * * * *"
    SPIKE_START_DATE: null  #  ISO 8601 format example: 2014-05-30 00:00:00
    SPIKE_DURATION: "300"  # for 5 minutes
    CPU_SPIKE_PROCESSES: "1"  # on 1 process
    NETWORK_DELAY: "1sec"  # with 100 ms network delay
    OTEL_TRACES_EXPORTER: "otlp_proto_http"
  machinesvc:
    OTEL_RESOURCE_ATTRIBUTES: "application=the-coffee-bar-app,deployment.environment=default"
    OTEL_PROPAGATORS: "b3,tracecontext,baggage"
    OTEL_SERVICE_NAME: "machine-svc"
  postgres:
    POSTGRES_HOST_AUTH_METHOD: trust
  watersvc:
    OTEL_RESOURCE_ATTRIBUTES: "application=the-coffee-bar-app,deployment.environment=default"
    OTEL_PROPAGATORS: "b3,tracecontext,baggage"
    OTEL_SERVICE_NAME: "water-svc"

crons:
  clicker: '30 */4 * * *' # cron spec of time, here, 4 o'clock
  postgres: '30 */8 * * *' # cron spec of time, here, 8 o'clock
  cashdesk: '30 */4 * * *' # cron spec of time, here, 4 o'clock
  bar: '30 */4 * * *' # cron spec of time, here, 4 o'clock

extras:
  otelColHostName: collection-sumologic-otelcol.collection
  lambdaCakesUrl:
  rumColSourceUrl:
  reactAppCoffeebarBackendUrl:
  reactAppPropagationCorsUrls: